{"version":3,"file":"index.mjs","sources":["../lib/ctors.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from '@stdlib/array-float64' ;\nimport Float32Array from '@stdlib/array-float32' ;\nimport Int16Array from '@stdlib/array-int16' ;\nimport Int32Array from '@stdlib/array-int32' ;\nimport Int8Array from '@stdlib/array-int8' ;\nimport Uint16Array from '@stdlib/array-uint16' ;\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Uint8Array from '@stdlib/array-uint8' ;\nimport Uint8ClampedArray from '@stdlib/array-uint8c' ;\nimport Complex64Array from '@stdlib/array-complex64' ;\nimport Complex128Array from '@stdlib/array-complex128' ;\n\n\n// MAIN //\n\nvar ctors = {\n\t'Float64Array': Float64Array,\n\t'Float32Array': Float32Array,\n\t'Int32Array': Int32Array,\n\t'Uint32Array': Uint32Array,\n\t'Int16Array': Int16Array,\n\t'Uint16Array': Uint16Array,\n\t'Int8Array': Int8Array,\n\t'Uint8Array': Uint8Array,\n\t'Uint8ClampedArray': Uint8ClampedArray,\n\t'Complex64Array': Complex64Array,\n\t'Complex128Array': Complex128Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array' ;\nimport ctors from './ctors.js' ;\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized typed array.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|TypedArray)} value or typed array\n*\n* @example\n* import parseJSON from '@stdlib/utils-parse-json' ;\n*\n* var str = '{\"type\":\"Float64Array\",\"data\":[5,3]}';\n*\n* var arr = parseJSON( str, reviver );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*/\nfunction reviver( key, value ) {\n\tvar ctor;\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tisArray( value.data )\n\t) {\n\t\tctor = ctors[ value.type ];\n\t\tif ( ctor ) {\n\t\t\treturn new ctor( value.data );\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default reviver;\n"],"names":["ctors","Float64Array","Float32Array","Int32Array","Uint32Array","Int16Array","Uint16Array","Int8Array","Uint8Array","Uint8ClampedArray","Complex64Array","Complex128Array","reviver","key","value","ctor","type","isArray","data"],"mappings":";;u8BAqCA,IAAIA,EAAQ,CACXC,aAAgBA,EAChBC,aAAgBA,EAChBC,WAAcA,EACdC,YAAeA,EACfC,WAAcA,EACdC,YAAeA,EACfC,UAAaA,EACbC,WAAcA,EACdC,kBAAqBA,EACrBC,eAAkBA,EAClBC,gBAAmBA,GCLpB,SAASC,EAASC,EAAKC,GACtB,IAAIC,EACJ,OACCD,GACAA,EAAME,MACNC,EAASH,EAAMI,QAEfH,EAAOf,EAAOc,EAAME,OAEZ,IAAID,EAAMD,EAAMI,MAGlBJ"}